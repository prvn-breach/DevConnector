{"ast":null,"code":"import _classCallCheck from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';var ProfileGithub=/*#__PURE__*/function(_Component){_inherits(ProfileGithub,_Component);var _super=_createSuper(ProfileGithub);function ProfileGithub(props){var _this;_classCallCheck(this,ProfileGithub);_this=_super.call(this,props);_this.state={clientId:'',clientSecret:'',count:5,sort:'created: asc',repos:[]};_this.myRef=React.createRef();return _this;}_createClass(ProfileGithub,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var username=this.props.username;var _this$state=this.state,count=_this$state.count,sort=_this$state.sort,clientId=_this$state.clientId,clientSecret=_this$state.clientSecret;fetch(\"https://api.github.com/users/\".concat(username,\"/repos?per_page=\").concat(count,\"&sort=\").concat(sort,\"&client_id=\").concat(clientId,\"&client_secret=\").concat(clientSecret)).then(function(res){return res.json();}).then(function(data){if(_this2.myRef.current){_this2.setState({repos:data});}}).catch(function(err){return console.log(err);});}},{key:\"render\",value:function render(){var repos=this.state.repos;var repoItems=repos.map(function(repo){return/*#__PURE__*/React.createElement(\"div\",{key:repo.id,className:\"card card-body mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(\"a\",{href:repo.html_url,className:\"text-info\",target:\"_blank\",rel:\"noopener noreferrer\"},repo.name)),/*#__PURE__*/React.createElement(\"p\",null,repo.description)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-info mr-1\"},\"Stars: \",repo.stargazers_count),/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary mr-1\"},\"Watchers: \",repo.watchers_count),/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-success\"},\"Forks: \",repo.forks_count))));});return/*#__PURE__*/React.createElement(\"div\",{ref:this.myRef},/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"h3\",{className:\"mb-4\"},\"Latest Github Repos\"),repoItems);}}]);return ProfileGithub;}(Component);export default ProfileGithub;","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/profile/ProfileGithub.js"],"names":["React","Component","ProfileGithub","props","state","clientId","clientSecret","count","sort","repos","myRef","createRef","username","fetch","then","res","json","data","current","setState","catch","err","console","log","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count"],"mappings":"orBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAGMC,CAAAA,a,8GAGF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,EADD,CAETC,YAAY,CAAE,EAFL,CAGTC,KAAK,CAAE,CAHE,CAITC,IAAI,CAAE,cAJG,CAKTC,KAAK,CAAE,EALE,CAAb,CAOA,MAAKC,KAAL,CAAaV,KAAK,CAACW,SAAN,EAAb,CATe,aAUlB,C,uFAEmB,oBACRC,CAAAA,QADQ,CACK,KAAKT,KADV,CACRS,QADQ,iBAEgC,KAAKR,KAFrC,CAERG,KAFQ,aAERA,KAFQ,CAEDC,IAFC,aAEDA,IAFC,CAEKH,QAFL,aAEKA,QAFL,CAEeC,YAFf,aAEeA,YAFf,CAIhBO,KAAK,wCAAiCD,QAAjC,4BAA4DL,KAA5D,kBAA0EC,IAA1E,uBAA4FH,QAA5F,2BAAsHC,YAAtH,EAAL,CACKQ,IADL,CACU,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADb,EAEKF,IAFL,CAEU,SAAAG,IAAI,CAAI,CACV,GAAG,MAAI,CAACP,KAAL,CAAWQ,OAAd,CAAuB,CACnB,MAAI,CAACC,QAAL,CAAc,CAAEV,KAAK,CAAEQ,IAAT,CAAd,EACH,CACJ,CANL,EAOKG,KAPL,CAOW,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAPd,EAQH,C,uCAEQ,IACGZ,CAAAA,KADH,CACa,KAAKL,KADlB,CACGK,KADH,CAGL,GAAMe,CAAAA,SAAS,CAAGf,KAAK,CAACgB,GAAN,CAAU,SAAAC,IAAI,qBAC5B,2BAAK,GAAG,CAAEA,IAAI,CAACC,EAAf,CAAmB,SAAS,CAAC,qBAA7B,eACI,2BAAK,SAAS,CAAC,KAAf,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,2CACI,yBACI,IAAI,CAAED,IAAI,CAACE,QADf,CAEI,SAAS,CAAC,WAFd,CAGI,MAAM,CAAC,QAHX,CAII,GAAG,CAAC,qBAJR,EAMKF,IAAI,CAACG,IANV,CADJ,CADJ,cAWI,6BAAIH,IAAI,CAACI,WAAT,CAXJ,CADJ,cAcI,2BAAK,SAAS,CAAC,UAAf,eACI,4BAAM,SAAS,CAAC,uBAAhB,YACYJ,IAAI,CAACK,gBADjB,CADJ,cAII,4BAAM,SAAS,CAAC,4BAAhB,eACeL,IAAI,CAACM,cADpB,CAJJ,cAOI,4BAAM,SAAS,CAAC,qBAAhB,YACYN,IAAI,CAACO,WADjB,CAPJ,CAdJ,CADJ,CAD4B,EAAd,CAAlB,CA8BA,mBACI,2BAAK,GAAG,CAAE,KAAKvB,KAAf,eACI,8BADJ,cAEI,0BAAI,SAAS,CAAC,MAAd,wBAFJ,CAGKc,SAHL,CADJ,CAOH,C,2BArEuBvB,S,EA4E5B,cAAeC,CAAAA,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\n\nclass ProfileGithub extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientId: '',\n            clientSecret: '',\n            count: 5,\n            sort: 'created: asc',\n            repos: []\n        }\n        this.myRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { username } = this.props;\n        const { count, sort, clientId, clientSecret } = this.state;\n\n        fetch(`https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`)\n            .then(res => res.json())\n            .then(data => {\n                if(this.myRef.current) {\n                    this.setState({ repos: data });\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        const { repos } = this.state;\n\n        const repoItems = repos.map(repo => (\n            <div key={repo.id} className=\"card card-body mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h4>\n                            <a \n                                href={repo.html_url} \n                                className=\"text-info\" \n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                {repo.name}\n                            </a>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <span className=\"badge badge-info mr-1\">\n                            Stars: {repo.stargazers_count}\n                        </span>\n                        <span className=\"badge badge-secondary mr-1\">\n                            Watchers: {repo.watchers_count}\n                        </span>\n                        <span className=\"badge badge-success\">\n                            Forks: {repo.forks_count}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        ))\n        return (\n            <div ref={this.myRef}>\n                <hr/>\n                <h3 className=\"mb-4\">Latest Github Repos</h3>\n                {repoItems}\n            </div>\n        );\n    }\n}\n\nProfileGithub.propTypes = {\n    username: PropTypes.string.isRequired\n}\n\nexport default ProfileGithub;\n"]},"metadata":{},"sourceType":"module"}