{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/post/Post.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPost } from \"../../actions/postActions\";\nimport Spinner from \"../common/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"./CommentForm\";\nimport CommentFeed from \"./CommentFeed\";\n\nclass Post extends Component {\n  componentDidMount() {\n    if (this.props.match.params.id) {\n      this.props.getPost(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    const {\n      post,\n      loading\n    } = this.props.post;\n    let postContent;\n\n    if (post === null || loading || Object.keys(post).length === 0) {\n      postContent = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 27\n        }\n      });\n    } else {\n      postContent = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PostItem, {\n        post: post,\n        showActions: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CommentForm, {\n        postId: post._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CommentFeed, {\n        postId: post._id,\n        comments: post.comments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/feed\",\n      className: \"btn btn-light mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, \"Back To Feed\"), postContent))));\n  }\n\n}\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/post/Post.js"],"names":["React","Component","Link","connect","PropTypes","getPost","Spinner","PostItem","CommentForm","CommentFeed","Post","componentDidMount","props","match","params","id","render","post","loading","postContent","Object","keys","length","_id","comments","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AACzBU,EAAAA,iBAAiB,GAAE;AACf,QAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3B,EAA8B;AAC1B,WAAKH,KAAL,CAAWP,OAAX,CAAmB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKN,KAAL,CAAWK,IAArC;AACA,QAAIE,WAAJ;;AAEA,QAAGF,IAAI,KAAK,IAAT,IAAiBC,OAAjB,IAA4BE,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,KAA8B,CAA7D,EAAgE;AAC5DH,MAAAA,WAAW,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH,KAFD,MAEO;AACHA,MAAAA,WAAW,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,IAAI,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAGN,IAAI,CAACM,GAA3B;AAAgC,QAAA,QAAQ,EAAEN,IAAI,CAACO,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,SAAS,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAIKL,WAJL,CADJ,CADJ,CADJ,CADJ;AAcH;;AApCwB;;AAuC7BT,IAAI,CAACe,SAAL,GAAiB;AACbpB,EAAAA,OAAO,EAAED,SAAS,CAACsB,IAAV,CAAeC,UADX;AAEbV,EAAAA,IAAI,EAAEb,SAAS,CAACwB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADkB,CAAL,CAA7B;;AAIA,eAAed,OAAO,CAAC0B,eAAD,EAAkB;AAACxB,EAAAA;AAAD,CAAlB,CAAP,CAAoCK,IAApC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPost } from \"../../actions/postActions\";\nimport Spinner from \"../common/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"./CommentForm\";\nimport CommentFeed from \"./CommentFeed\";\n\nclass Post extends Component {\n    componentDidMount(){\n        if(this.props.match.params.id){\n            this.props.getPost(this.props.match.params.id);\n        }\n    }\n    render() {\n        const { post, loading } = this.props.post;\n        let postContent;\n\n        if(post === null || loading || Object.keys(post).length  === 0) {\n            postContent = <Spinner />\n        } else {\n            postContent = (\n                <div>\n                    <PostItem post={post} showActions={false} />\n                    <CommentForm postId={post._id} />\n                    <CommentFeed postId ={post._id} comments={post.comments} />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"post\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <Link to=\"/feed\" className=\"btn btn-light mb-3\">\n                                Back To Feed\n                            </Link>\n                            {postContent}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}