{"ast":null,"code":"import _classCallCheck from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link,withRouter}from\"react-router-dom\";// Define routing\n// Define proptypes\nimport{connect}from\"react-redux\";// connect component with redux store\nimport{logoutUser}from\"../../actions/authActions\";// actions\nimport{clearCurrentProfile}from\"../../actions/profileActions\";var Navbar=/*#__PURE__*/function(_Component){_inherits(Navbar,_Component);var _super=_createSuper(Navbar);function Navbar(){_classCallCheck(this,Navbar);return _super.apply(this,arguments);}_createClass(Navbar,[{key:\"onLogoutClick\",// Trigger event when user clicked logout event\nvalue:function onLogoutClick(e){e.preventDefault();this.props.clearCurrentProfile();this.props.logoutUser(this.props.history);}},{key:\"render\",value:function render(){var _this$props$auth=this.props.auth,isAuthenticated=_this$props$auth.isAuthenticated,user=_this$props$auth.user;// Auth Links displays when user is already logged in\nvar authLinks=/*#__PURE__*/React.createElement(\"ul\",{className:\"navbar-nav ml-auto\"},/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(Link,{className:\"nav-link\",to:\"/feed\"},\"Post Feed\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(Link,{className:\"nav-link\",to:\"/dashboard\"},\"Dashboard\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{href:\" \",className:\"nav-link\",onClick:this.onLogoutClick.bind(this)},/*#__PURE__*/React.createElement(\"img\",{className:\"rounded-circle\",src:user.avatar,alt:user.name,style:{width:\"25px\",marginRight:\"5px\"},title:\"You must have a Gravatar connected to your email to display an image\"}),\" \",\"Logout\")));// Guest Links displays when user is not logged in\nvar guestLinks=/*#__PURE__*/React.createElement(\"ul\",{className:\"navbar-nav ml-auto\"},/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(Link,{className:\"nav-link\",to:\"/register\"},\"Sign Up\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(Link,{className:\"nav-link\",to:\"/login\"},\"Login\")));return/*#__PURE__*/React.createElement(\"nav\",{className:\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Link,{className:\"navbar-brand\",to:\"/\"},\"DevConnector\"),/*#__PURE__*/React.createElement(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-toggle\":\"collapse\",\"data-target\":\"#mobile-nav\"},/*#__PURE__*/React.createElement(\"span\",{className:\"navbar-toggler-icon\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"collapse navbar-collapse\",id:\"mobile-nav\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"navbar-nav mr-auto\"},/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(Link,{className:\"nav-link\",to:\"/profiles\"},\"Developers\"))),isAuthenticated?authLinks:guestLinks)));}}]);return Navbar;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{logoutUser:logoutUser,clearCurrentProfile:clearCurrentProfile})(withRouter(Navbar));","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/Layout/Navbar.js"],"names":["React","Component","Link","withRouter","connect","logoutUser","clearCurrentProfile","Navbar","e","preventDefault","props","history","auth","isAuthenticated","user","authLinks","onLogoutClick","bind","avatar","name","width","marginRight","guestLinks","mapStateToProps","state"],"mappings":"orBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CAAqD;AACjB;AACpC,OAASC,OAAT,KAAwB,aAAxB,CAAuC;AACvC,OAASC,UAAT,KAA2B,2BAA3B,CAAwD;AACxD,OAASC,mBAAT,KAAoC,8BAApC,C,GAEMC,CAAAA,M,8NACJ;6BACcC,C,CAAG,CACfA,CAAC,CAACC,cAAF,GACA,KAAKC,KAAL,CAAWJ,mBAAX,GACA,KAAKI,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,OAAjC,EACD,C,uCAEQ,sBAC2B,KAAKD,KAAL,CAAWE,IADtC,CACCC,eADD,kBACCA,eADD,CACkBC,IADlB,kBACkBA,IADlB,CAGP;AACA,GAAMC,CAAAA,SAAS,cACb,0BAAI,SAAS,CAAC,oBAAd,eACE,0BAAI,SAAS,CAAC,UAAd,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,CAAC,OAA9B,cADF,CADF,cAME,0BAAI,SAAS,CAAC,UAAd,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,CAAC,YAA9B,cADF,CANF,cAWE,0BAAI,SAAS,CAAC,UAAd,eACE,yBACE,IAAI,CAAC,GADP,CAEE,SAAS,CAAC,UAFZ,CAGE,OAAO,CAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAHX,eAKE,2BACE,SAAS,CAAC,gBADZ,CAEE,GAAG,CAAEH,IAAI,CAACI,MAFZ,CAGE,GAAG,CAAEJ,IAAI,CAACK,IAHZ,CAIE,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,WAAW,CAAE,KAA9B,CAJT,CAKE,KAAK,CAAC,sEALR,EALF,CAWK,GAXL,UADF,CAXF,CADF,CA+BA;AACA,GAAMC,CAAAA,UAAU,cACd,0BAAI,SAAS,CAAC,oBAAd,eACE,0BAAI,SAAS,CAAC,UAAd,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,CAAC,WAA9B,YADF,CADF,cAME,0BAAI,SAAS,CAAC,UAAd,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,CAAC,QAA9B,UADF,CANF,CADF,CAeA,mBACE,2BAAK,SAAS,CAAC,kDAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,cAAhB,CAA+B,EAAE,CAAC,GAAlC,iBADF,cAIE,8BACE,SAAS,CAAC,gBADZ,CAEE,IAAI,CAAC,QAFP,CAGE,cAAY,UAHd,CAIE,cAAY,aAJd,eAME,4BAAM,SAAS,CAAC,qBAAhB,EANF,CAJF,cAaE,2BAAK,SAAS,CAAC,0BAAf,CAA0C,EAAE,CAAC,YAA7C,eACE,0BAAI,SAAS,CAAC,oBAAd,eACE,0BAAI,SAAS,CAAC,UAAd,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,CAAC,WAA9B,eADF,CADF,CADF,CAQGT,eAAe,CAAGE,SAAH,CAAeO,UARjC,CAbF,CADF,CADF,CA4BD,C,oBAvFkBrB,S,EAgGrB,GAAMsB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCZ,IAAI,CAAEY,KAAK,CAACZ,IADsB,CAAZ,EAAxB,CAIA,cAAeR,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAAElB,UAAU,CAAVA,UAAF,CAAcC,mBAAmB,CAAnBA,mBAAd,CAAlB,CAAP,CACbH,UAAU,CAACI,MAAD,CADG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\"; // Define routing\nimport PropTypes from \"prop-types\"; // Define proptypes\nimport { connect } from \"react-redux\"; // connect component with redux store\nimport { logoutUser } from \"../../actions/authActions\"; // actions\nimport { clearCurrentProfile } from \"../../actions/profileActions\";\n\nclass Navbar extends Component {\n  // Trigger event when user clicked logout event\n  onLogoutClick(e) {\n    e.preventDefault();\n    this.props.clearCurrentProfile();\n    this.props.logoutUser(this.props.history);\n  }\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    // Auth Links displays when user is already logged in\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/feed\">\n            Post Feed\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/dashboard\">\n            Dashboard\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\" \"\n            className=\"nav-link\"\n            onClick={this.onLogoutClick.bind(this)}\n          >\n            <img\n              className=\"rounded-circle\"\n              src={user.avatar}\n              alt={user.name}\n              style={{ width: \"25px\", marginRight: \"5px\" }}\n              title=\"You must have a Gravatar connected to your email to display an image\"\n            />{\" \"}\n            Logout\n          </a>\n        </li>\n      </ul>\n    );\n\n    // Guest Links displays when user is not logged in\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/register\">\n            Sign Up\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            DevConnector\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/profiles\">\n                  Developers\n                </Link>\n              </li>\n            </ul>\n            {isAuthenticated ? authLinks : guestLinks}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  clearCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logoutUser, clearCurrentProfile })(\n  withRouter(Navbar)\n);\n"]},"metadata":{},"sourceType":"module"}