{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/client/src/components/common/InputGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\n\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst InputGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  type,\n  onChange,\n  icon\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: type,\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    name: name,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, error));\n}; // PropTypes defines datatype and which props are required\n\n\nInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\nInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default InputGroup;","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/client/src/components/common/InputGroup.js"],"names":["React","PropTypes","classnames","InputGroup","name","placeholder","value","error","type","onChange","icon","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AAErC,MAAMC,UAAU,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,WAFgB;AAGhBC,EAAAA,KAHgB;AAIhBC,EAAAA,KAJgB;AAKhBC,EAAAA,IALgB;AAMhBC,EAAAA,QANgB;AAOhBC,EAAAA;AAPgB,CAAD,KAQb;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAEA,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eAMI;AACI,IAAA,IAAI,EAAEF,IADV;AAEI,IAAA,SAAS,EAAEN,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcK;AADoC,KAAjC,CAFzB;AAKI,IAAA,WAAW,EAAEF,WALjB;AAMI,IAAA,IAAI,EAAED,IANV;AAOI,IAAA,KAAK,EAAEE,KAPX;AAQI,IAAA,QAAQ,EAAEG,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAgBKF,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAhBd,CADJ;AAoBH,CA7BD,C,CA+BA;;;AACAJ,UAAU,CAACQ,SAAX,GAAuB;AACnBP,EAAAA,IAAI,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADJ;AAEnBR,EAAAA,WAAW,EAAEJ,SAAS,CAACW,MAFJ;AAGnBN,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAHL;AAInBL,EAAAA,IAAI,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UAJJ;AAKnBH,EAAAA,IAAI,EAAET,SAAS,CAACW,MALG;AAMnBL,EAAAA,KAAK,EAAEN,SAAS,CAACW,MANE;AAOnBH,EAAAA,QAAQ,EAAER,SAAS,CAACa,IAAV,CAAeD;AAPN,CAAvB;AAUAV,UAAU,CAACY,YAAX,GAA0B;AACtBP,EAAAA,IAAI,EAAE;AADgB,CAA1B;AAKA,eAAeL,UAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst InputGroup = ({\n    name,\n    placeholder,\n    value,\n    error,\n    type,\n    onChange,\n    icon\n}) => {\n    return (\n        <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">\n                    <i className={icon} />\n                </span>\n            </div>\n            <input\n                type={type} \n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder} \n                name={name} \n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\n// PropTypes defines datatype and which props are required\nInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    icon: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n}\n\nInputGroup.defaultProps = {\n    type: 'text'\n}\n\n\nexport default InputGroup;\n"]},"metadata":{},"sourceType":"module"}