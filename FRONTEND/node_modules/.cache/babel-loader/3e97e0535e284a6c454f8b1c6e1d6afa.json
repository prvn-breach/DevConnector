{"ast":null,"code":"import axios from'axios';import{ADD_POST,DELETE_POST,GET_ERRORS,CLEAR_ERRORS,GET_POST,GET_POSTS,POST_LOADING}from\"./types\";// Add Post\nexport var addPost=function addPost(postData){return function(dispatch){dispatch(clearErrors());axios.post('/api/posts',postData).then(function(res){return dispatch({type:ADD_POST,payload:res.data});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Get Posts\nexport var getPosts=function getPosts(){return function(dispatch){dispatch(setPostLoading());axios.get('/api/posts').then(function(res){return dispatch({type:GET_POSTS,payload:res.data});}).catch(function(err){return dispatch({type:GET_POSTS,payload:null});});};};// Get Post\nexport var getPost=function getPost(id){return function(dispatch){dispatch(setPostLoading());axios.get(\"/api/posts/\".concat(id)).then(function(res){return dispatch({type:GET_POST,payload:res.data});}).catch(function(err){return dispatch({type:GET_POST,payload:null});});};};// Delete Post\nexport var deletePost=function deletePost(id){return function(dispatch){axios.delete(\"/api/posts/\".concat(id)).then(function(res){return dispatch({type:DELETE_POST,payload:id});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Add Like\nexport var addLike=function addLike(id){return function(dispatch){axios.post(\"/api/posts/like/\".concat(id)).then(function(res){return dispatch(getPosts());}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Remove Like\nexport var removeLike=function removeLike(id){return function(dispatch){axios.post(\"/api/posts/unlike/\".concat(id)).then(function(res){return dispatch(getPosts());}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Add Comment\nexport var addComment=function addComment(postId,commentData){return function(dispatch){dispatch(clearErrors());axios.post(\"/api/posts/comment/\".concat(postId),commentData).then(function(res){return dispatch({type:GET_POST,payload:res.data});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Delete Comment for Single Post\nexport var deleteComment=function deleteComment(postId,commentId){return function(dispatch){axios.delete(\"/api/posts/comment/\".concat(postId,\"/\").concat(commentId)).then(function(res){return dispatch({type:GET_POST,payload:res.data});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Loading \nexport var setPostLoading=function setPostLoading(){return{type:POST_LOADING};};// Clear Errors\nexport var clearErrors=function clearErrors(){return{type:CLEAR_ERRORS};};","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/actions/postActions.js"],"names":["axios","ADD_POST","DELETE_POST","GET_ERRORS","CLEAR_ERRORS","GET_POST","GET_POSTS","POST_LOADING","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { \n    ADD_POST, \n    DELETE_POST, \n    GET_ERRORS, \n    CLEAR_ERRORS,\n    GET_POST, \n    GET_POSTS, \n    POST_LOADING \n} from \"./types\";\n\n\n// Add Post\nexport const addPost = postData => dispatch => {\n    dispatch(clearErrors());\n    axios.post('/api/posts', postData)\n        .then(res => \n            dispatch({\n                type: ADD_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Get Posts\nexport const getPosts = () => dispatch => {\n    dispatch(setPostLoading());\n    axios.get('/api/posts')\n        .then(res => \n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_POSTS,\n                payload: null\n            })    \n        )\n}\n\n// Get Post\nexport const getPost = (id) => dispatch => {\n    dispatch(setPostLoading());\n    axios.get(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_POST,\n                payload: null\n            })    \n        )\n}\n\n// Delete Post\nexport const deletePost = (id) => dispatch => {\n    axios.delete(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: DELETE_POST,\n                payload: id\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Add Like\nexport const addLike = (id) => dispatch => {\n    axios.post(`/api/posts/like/${id}`)\n        .then(res => \n            dispatch(getPosts())    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Remove Like\nexport const removeLike = (id) => dispatch => {\n    axios.post(`/api/posts/unlike/${id}`)\n        .then(res => \n            dispatch(getPosts())    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n    dispatch(clearErrors());\n    axios.post(`/api/posts/comment/${postId}`, commentData)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Delete Comment for Single Post\nexport const deleteComment = (postId, commentId) => dispatch => {\n    axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n\n// Loading \nexport const setPostLoading = () => {\n    return {\n        type: POST_LOADING\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    }\n}"]},"metadata":{},"sourceType":"module"}