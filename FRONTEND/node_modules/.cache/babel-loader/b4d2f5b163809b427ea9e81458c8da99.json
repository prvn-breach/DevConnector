{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise-mern/practise/DevConnector/client/src/components/profile/ProfileGithub.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nclass ProfileGithub extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientId: '',\n      clientSecret: '',\n      count: 5,\n      sort: 'created: asc',\n      repos: []\n    };\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      username\n    } = this.props;\n    const {\n      count,\n      sort,\n      clientId,\n      clientSecret\n    } = this.state;\n    fetch(`https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`).then(res => res.json()).then(data => {\n      if (this.myRef.current) {\n        this.setState({\n          repos: data\n        });\n      }\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      repos\n    } = this.state;\n    const repoItems = repos.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n      key: repo.id,\n      className: \"card card-body mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: repo.html_url,\n      className: \"text-info\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, repo.name)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, repo.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-info mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Stars: \", repo.stargazers_count), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Watchers: \", repo.watchers_count), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Forks: \", repo.forks_count)))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.myRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Latest Github Repos\"), repoItems);\n  }\n\n}\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default ProfileGithub;","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/profile/ProfileGithub.js"],"names":["React","Component","PropTypes","ProfileGithub","constructor","props","state","clientId","clientSecret","count","sort","repos","myRef","createRef","componentDidMount","username","fetch","then","res","json","data","current","setState","catch","err","console","log","render","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\n\nclass ProfileGithub extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientId: '',\n            clientSecret: '',\n            count: 5,\n            sort: 'created: asc',\n            repos: []\n        }\n        this.myRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { username } = this.props;\n        const { count, sort, clientId, clientSecret } = this.state;\n\n        fetch(`https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`)\n            .then(res => res.json())\n            .then(data => {\n                if(this.myRef.current) {\n                    this.setState({ repos: data });\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        const { repos } = this.state;\n\n        const repoItems = repos.map(repo => (\n            <div key={repo.id} className=\"card card-body mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h4>\n                            <a \n                                href={repo.html_url} \n                                className=\"text-info\" \n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                {repo.name}\n                            </a>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <span className=\"badge badge-info mr-1\">\n                            Stars: {repo.stargazers_count}\n                        </span>\n                        <span className=\"badge badge-secondary mr-1\">\n                            Watchers: {repo.watchers_count}\n                        </span>\n                        <span className=\"badge badge-success\">\n                            Forks: {repo.forks_count}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        ))\n        return (\n            <div ref={this.myRef}>\n                <hr/>\n                <h3 className=\"mb-4\">Latest Github Repos</h3>\n                {repoItems}\n            </div>\n        );\n    }\n}\n\nProfileGithub.propTypes = {\n    username: PropTypes.string.isRequired\n}\n\nexport default ProfileGithub;\n"]},"metadata":{},"sourceType":"module"}