{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/common/SelectListGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\n\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst SelectListGroup = ({\n  name,\n  value,\n  error,\n  info,\n  onChange,\n  options\n}) => {\n  const selectOptions = options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.label,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, option.label));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    name: name,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, selectOptions), info && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, info), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, error));\n}; // PropTypes defines datatype and which props are required\n\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectListGroup;","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/common/SelectListGroup.js"],"names":["React","PropTypes","classnames","SelectListGroup","name","value","error","info","onChange","options","selectOptions","map","option","label","propTypes","string","isRequired","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AAErC,MAAMC,eAAe,GAAG,CAAC;AACrBC,EAAAA,IADqB;AAErBC,EAAAA,KAFqB;AAGrBC,EAAAA,KAHqB;AAIrBC,EAAAA,IAJqB;AAKrBC,EAAAA,QALqB;AAMrBC,EAAAA;AANqB,CAAD,KAOlB;AACF,QAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,iBACpC;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,IAAA,KAAK,EAAED,MAAM,CAACP,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,MAAM,CAACC,KADZ,CADkB,CAAtB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAEX,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcI;AADoC,KAAjC,CADzB;AAII,IAAA,IAAI,EAAEF,IAJV;AAKI,IAAA,KAAK,EAAEC,KALX;AAMI,IAAA,QAAQ,EAAEG,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKE,aARL,CADJ,EAWKH,IAAI,iBAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAXb,EAYKD,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAZd,CADJ;AAgBH,CA7BD,C,CA+BA;;;AACAH,eAAe,CAACW,SAAhB,GAA4B;AACxBV,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UADC;AAExBX,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UAFA;AAGxBT,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAHQ;AAIxBT,EAAAA,KAAK,EAAEL,SAAS,CAACc,MAJO;AAKxBP,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UALD;AAMxBP,EAAAA,OAAO,EAAER,SAAS,CAACiB,KAAV,CAAgBF;AAND,CAA5B;AASA,eAAeb,eAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst SelectListGroup = ({\n    name,\n    value,\n    error,\n    info,\n    onChange,\n    options\n}) => {\n    const selectOptions = options.map(option => (\n        <option key={option.label} value={option.value}>\n            {option.label}\n        </option>\n    ));\n    return (\n        <div className=\"form-group\">\n            <select \n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                name={name} \n                value={value}\n                onChange={onChange}\n            >\n                {selectOptions}\n            </select>\n            {info && <small className=\"form-text text-muted\">{info}</small>}\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\n// PropTypes defines datatype and which props are required\nSelectListGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n}\n\nexport default SelectListGroup;\n"]},"metadata":{},"sourceType":"module"}