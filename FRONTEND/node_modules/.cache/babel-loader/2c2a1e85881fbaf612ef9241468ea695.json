{"ast":null,"code":"import _defineProperty from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link,withRouter}from\"react-router-dom\";import TextFieldGroup from\"../common/TextFieldGroup\";import TextAreaFieldGroup from\"../common/TextAreaFieldGroup\";import{connect}from\"react-redux\";import{addExperience}from\"../../actions/profileActions\";var AddExperience=/*#__PURE__*/function(_Component){_inherits(AddExperience,_Component);var _super=_createSuper(AddExperience);function AddExperience(props){var _this;_classCallCheck(this,AddExperience);_this=_super.call(this,props);_this.state={company:'',title:'',location:'',from:'',to:'',current:false,description:'',errors:{},disabled:false};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.onCheck=_this.onCheck.bind(_assertThisInitialized(_this));return _this;}_createClass(AddExperience,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.errors){this.setState({errors:nextProps.errors});}}},{key:\"onChange\",value:function onChange(e){this.setState(_defineProperty({},e.target.name,e.target.value));}},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();var expData={company:this.state.company,title:this.state.title,location:this.state.location,from:this.state.from,to:this.state.to,current:this.state.current,description:this.state.description};this.props.addExperience(expData,this.props.history);}},{key:\"onCheck\",value:function onCheck(e){this.setState({disabled:!this.state.disabled,current:!this.state.current});}},{key:\"render\",value:function render(){var errors=this.state.errors;return/*#__PURE__*/React.createElement(\"div\",{className:\"add-experience\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-8 m-auto\"},/*#__PURE__*/React.createElement(Link,{to:\"/dashboard\",className:\"btn btn-light\"},\"Go Back\"),/*#__PURE__*/React.createElement(\"h1\",{className:\"display-4 text-center\"},\"Add Experience\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead text-center\"},\"Add any job or position that you have had in the past or current\"),/*#__PURE__*/React.createElement(\"small\",{className:\"d-block pb-3\"},\"* = required fields\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(TextFieldGroup,{placeholder:\"* Company\",name:\"company\",value:this.state.company,onChange:this.onChange,error:errors.company}),/*#__PURE__*/React.createElement(TextFieldGroup,{placeholder:\"* Job Title\",name:\"title\",value:this.state.title,onChange:this.onChange,error:errors.title}),/*#__PURE__*/React.createElement(TextFieldGroup,{placeholder:\"Location\",name:\"location\",value:this.state.location,onChange:this.onChange,error:errors.location}),/*#__PURE__*/React.createElement(\"h6\",null,\"From Date\"),/*#__PURE__*/React.createElement(TextFieldGroup,{name:\"from\",type:\"date\",value:this.state.from,onChange:this.onChange,error:errors.from}),/*#__PURE__*/React.createElement(\"h6\",null,\"To Date\"),/*#__PURE__*/React.createElement(TextFieldGroup,{name:\"to\",type:\"date\",value:this.state.to,onChange:this.onChange,error:errors.to,disabled:this.state.disabled?'disabled':''}),/*#__PURE__*/React.createElement(\"div\",{className:\"form-check mb-4\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",className:\"form-check-input\",name:\"current\",value:this.state.current,checked:this.state.current,onChange:this.onCheck,id:\"current\"}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"current\",className:\"form-check-label\"},\"Current Job\")),/*#__PURE__*/React.createElement(TextAreaFieldGroup,{placeholder:\"Job Description\",name:\"description\",value:this.state.description,onChange:this.onChange,error:errors.description,info:\"Tell us about the position\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"submit\",className:\"btn btn-info btn-block mt-4\"}))))));}}]);return AddExperience;}(Component);var mapStateToProps=function mapStateToProps(state){return{profile:state.profile,errors:state.errors};};export default connect(mapStateToProps,{addExperience:addExperience})(withRouter(AddExperience));","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/add-credentials/AddExperience.js"],"names":["React","Component","Link","withRouter","TextFieldGroup","TextAreaFieldGroup","connect","addExperience","AddExperience","props","state","company","title","location","from","to","current","description","errors","disabled","onChange","bind","onSubmit","onCheck","nextProps","setState","e","target","name","value","preventDefault","expData","history","mapStateToProps","profile"],"mappings":"wiCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,8BAA/B,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,aAAT,KAA8B,8BAA9B,C,GAEMC,CAAAA,a,8GACF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,OAAO,CAAE,EADA,CAETC,KAAK,CAAE,EAFE,CAGTC,QAAQ,CAAE,EAHD,CAITC,IAAI,CAAE,EAJG,CAKTC,EAAE,CAAE,EALK,CAMTC,OAAO,CAAE,KANA,CAOTC,WAAW,CAAE,EAPJ,CAQTC,MAAM,CAAE,EARC,CASTC,QAAQ,CAAE,KATD,CAAb,CAYA,MAAKC,QAAL,CAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB,CACA,MAAKC,QAAL,CAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB,CACA,MAAKE,OAAL,CAAe,MAAKA,OAAL,CAAaF,IAAb,+BAAf,CAhBe,aAiBlB,C,sGAEyBG,S,CAAW,CACjC,GAAGA,SAAS,CAACN,MAAb,CAAqB,CACjB,KAAKO,QAAL,CAAc,CAAEP,MAAM,CAAEM,SAAS,CAACN,MAApB,CAAd,EACH,CACJ,C,0CAGQQ,C,CAAG,CACR,KAAKD,QAAL,oBAAiBC,CAAC,CAACC,MAAF,CAASC,IAA1B,CAAiCF,CAAC,CAACC,MAAF,CAASE,KAA1C,GACH,C,0CAEQH,C,CAAG,CACRA,CAAC,CAACI,cAAF,GACA,GAAMC,CAAAA,OAAO,CAAG,CACZpB,OAAO,CAAE,KAAKD,KAAL,CAAWC,OADR,CAEZC,KAAK,CAAE,KAAKF,KAAL,CAAWE,KAFN,CAGZC,QAAQ,CAAE,KAAKH,KAAL,CAAWG,QAHT,CAIZC,IAAI,CAAG,KAAKJ,KAAL,CAAWI,IAJN,CAKZC,EAAE,CAAE,KAAKL,KAAL,CAAWK,EALH,CAMZC,OAAO,CAAE,KAAKN,KAAL,CAAWM,OANR,CAOZC,WAAW,CAAE,KAAKP,KAAL,CAAWO,WAPZ,CAAhB,CAUA,KAAKR,KAAL,CAAWF,aAAX,CAAyBwB,OAAzB,CAAkC,KAAKtB,KAAL,CAAWuB,OAA7C,EACH,C,wCAEON,C,CAAE,CACN,KAAKD,QAAL,CAAc,CACVN,QAAQ,CAAE,CAAC,KAAKT,KAAL,CAAWS,QADZ,CAEVH,OAAO,CAAE,CAAC,KAAKN,KAAL,CAAWM,OAFX,CAAd,EAIH,C,uCAEQ,IACEE,CAAAA,MADF,CACY,KAAKR,KADjB,CACEQ,MADF,CAEL,mBACI,2BAAK,SAAS,CAAC,gBAAf,eACI,2BAAK,SAAS,CAAC,WAAf,eACI,2BAAK,SAAS,CAAC,KAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,eACI,oBAAC,IAAD,EAAM,EAAE,CAAC,YAAT,CAAsB,SAAS,CAAC,eAAhC,YADJ,cAII,0BAAI,SAAS,CAAC,uBAAd,mBAJJ,cAKI,yBAAG,SAAS,CAAC,kBAAb,qEALJ,cAMI,6BAAO,SAAS,CAAC,cAAjB,wBANJ,cAOI,4BAAM,QAAQ,CAAE,KAAKI,QAArB,eACI,oBAAC,cAAD,EACI,WAAW,CAAC,WADhB,CAEI,IAAI,CAAC,SAFT,CAGI,KAAK,CAAE,KAAKZ,KAAL,CAAWC,OAHtB,CAII,QAAQ,CAAE,KAAKS,QAJnB,CAKI,KAAK,CAAEF,MAAM,CAACP,OALlB,EADJ,cAQI,oBAAC,cAAD,EACI,WAAW,CAAC,aADhB,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAE,KAAKD,KAAL,CAAWE,KAHtB,CAII,QAAQ,CAAE,KAAKQ,QAJnB,CAKI,KAAK,CAAEF,MAAM,CAACN,KALlB,EARJ,cAeI,oBAAC,cAAD,EACI,WAAW,CAAC,UADhB,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAE,KAAKF,KAAL,CAAWG,QAHtB,CAII,QAAQ,CAAE,KAAKO,QAJnB,CAKI,KAAK,CAAEF,MAAM,CAACL,QALlB,EAfJ,cAsBI,0CAtBJ,cAuBI,oBAAC,cAAD,EACI,IAAI,CAAC,MADT,CAEI,IAAI,CAAC,MAFT,CAGI,KAAK,CAAE,KAAKH,KAAL,CAAWI,IAHtB,CAII,QAAQ,CAAE,KAAKM,QAJnB,CAKI,KAAK,CAAEF,MAAM,CAACJ,IALlB,EAvBJ,cA8BI,wCA9BJ,cA+BI,oBAAC,cAAD,EACI,IAAI,CAAC,IADT,CAEI,IAAI,CAAC,MAFT,CAGI,KAAK,CAAE,KAAKJ,KAAL,CAAWK,EAHtB,CAII,QAAQ,CAAE,KAAKK,QAJnB,CAKI,KAAK,CAAEF,MAAM,CAACH,EALlB,CAMI,QAAQ,CAAE,KAAKL,KAAL,CAAWS,QAAX,CAAsB,UAAtB,CAAmC,EANjD,EA/BJ,cAuCI,2BAAK,SAAS,CAAC,iBAAf,eACI,6BACI,IAAI,CAAC,UADT,CAEI,SAAS,CAAC,kBAFd,CAGI,IAAI,CAAC,SAHT,CAII,KAAK,CAAE,KAAKT,KAAL,CAAWM,OAJtB,CAKI,OAAO,CAAE,KAAKN,KAAL,CAAWM,OALxB,CAMI,QAAQ,CAAE,KAAKO,OANnB,CAOI,EAAE,CAAC,SAPP,EADJ,cAUI,6BAAO,OAAO,CAAC,SAAf,CAAyB,SAAS,CAAC,kBAAnC,gBAVJ,CAvCJ,cAqDI,oBAAC,kBAAD,EACI,WAAW,CAAC,iBADhB,CAEI,IAAI,CAAC,aAFT,CAGI,KAAK,CAAE,KAAKb,KAAL,CAAWO,WAHtB,CAII,QAAQ,CAAE,KAAKG,QAJnB,CAKI,KAAK,CAAEF,MAAM,CAACD,WALlB,CAMI,IAAI,CAAC,4BANT,EArDJ,cA6DI,6BACI,IAAI,CAAC,QADT,CAEI,KAAK,CAAC,QAFV,CAGI,SAAS,CAAC,6BAHd,EA7DJ,CAPJ,CADJ,CADJ,CADJ,CADJ,CAmFH,C,2BA1IuBhB,S,EAmJ5B,GAAMgC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACvB,KAAD,QAAY,CAChCwB,OAAO,CAAExB,KAAK,CAACwB,OADiB,CAEhChB,MAAM,CAAER,KAAK,CAACQ,MAFkB,CAAZ,EAAxB,CAKA,cAAeZ,CAAAA,OAAO,CAAC2B,eAAD,CAAkB,CAAC1B,aAAa,CAAbA,aAAD,CAAlB,CAAP,CAA0CJ,UAAU,CAACK,aAAD,CAApD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addExperience } from \"../../actions/profileActions\";\n\nclass AddExperience extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            company: '',\n            title: '',\n            location: '',\n            from: '',\n            to: '',\n            current: false,\n            description: '',\n            errors: {},\n            disabled: false\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onCheck = this.onCheck.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const expData = {\n            company: this.state.company,\n            title: this.state.title,\n            location: this.state.location,\n            from : this.state.from,\n            to: this.state.to,\n            current: this.state.current,\n            description: this.state.description\n        }\n\n        this.props.addExperience(expData, this.props.history);\n    }\n\n    onCheck(e){\n        this.setState({\n            disabled: !this.state.disabled,\n            current: !this.state.current\n        })\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"add-experience\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to=\"/dashboard\" className=\"btn btn-light\">\n                                Go Back\n                            </Link>\n                            <h1 className=\"display-4 text-center\">Add Experience</h1>\n                            <p className=\"lead text-center\">Add any job or position that you have had in the past or current</p>\n                            <small className=\"d-block pb-3\">* = required fields</small>\n                            <form onSubmit={this.onSubmit}>\n                                <TextFieldGroup \n                                    placeholder=\"* Company\"\n                                    name=\"company\"\n                                    value={this.state.company}\n                                    onChange={this.onChange}\n                                    error={errors.company}\n                                />\n                                <TextFieldGroup \n                                    placeholder=\"* Job Title\"\n                                    name=\"title\"\n                                    value={this.state.title}\n                                    onChange={this.onChange}\n                                    error={errors.title}\n                                />\n                                <TextFieldGroup \n                                    placeholder=\"Location\"\n                                    name=\"location\"\n                                    value={this.state.location}\n                                    onChange={this.onChange}\n                                    error={errors.location}\n                                />\n                                <h6>From Date</h6>\n                                <TextFieldGroup \n                                    name=\"from\"\n                                    type=\"date\"\n                                    value={this.state.from}\n                                    onChange={this.onChange}\n                                    error={errors.from}\n                                />\n                                <h6>To Date</h6>\n                                <TextFieldGroup \n                                    name=\"to\"\n                                    type=\"date\"\n                                    value={this.state.to}\n                                    onChange={this.onChange}\n                                    error={errors.to}\n                                    disabled={this.state.disabled ? 'disabled' : ''}\n                                />\n                                <div className=\"form-check mb-4\">\n                                    <input \n                                        type=\"checkbox\" \n                                        className=\"form-check-input\"\n                                        name=\"current\"\n                                        value={this.state.current}\n                                        checked={this.state.current}\n                                        onChange={this.onCheck}\n                                        id=\"current\"\n                                    />\n                                    <label htmlFor=\"current\" className=\"form-check-label\">\n                                        Current Job\n                                    </label>\n                                </div>\n                                <TextAreaFieldGroup \n                                    placeholder=\"Job Description\"\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    onChange={this.onChange}\n                                    error={errors.description}\n                                    info=\"Tell us about the position\"\n                                />\n                                <input \n                                    type=\"submit\" \n                                    value=\"submit\" \n                                    className=\"btn btn-info btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {addExperience})(withRouter(AddExperience));\n"]},"metadata":{},"sourceType":"module"}