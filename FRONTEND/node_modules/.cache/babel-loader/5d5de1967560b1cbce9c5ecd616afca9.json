{"ast":null,"code":"import React from'react';// PropTypes defines datatype and which props are required\nimport classnames from'classnames';// Which is used to pass conditional classess\nvar TextAreaFieldGroup=function TextAreaFieldGroup(_ref){var name=_ref.name,placeholder=_ref.placeholder,value=_ref.value,error=_ref.error,info=_ref.info,onChange=_ref.onChange;return/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"textarea\",{className:classnames('form-control form-control-lg',{'is-invalid':error}),placeholder:placeholder,name:name,value:value,onChange:onChange}),info&&/*#__PURE__*/React.createElement(\"small\",{className:\"form-text text-muted\"},info),error&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback\"},error));};// PropTypes defines datatype and which props are required\nexport default TextAreaFieldGroup;","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/common/TextAreaFieldGroup.js"],"names":["React","classnames","TextAreaFieldGroup","name","placeholder","value","error","info","onChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACoC;AACpC,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAAqC;AAErC,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAOrB,IANFC,CAAAA,IAME,MANFA,IAME,CALFC,WAKE,MALFA,WAKE,CAJFC,KAIE,MAJFA,KAIE,CAHFC,KAGE,MAHFA,KAGE,CAFFC,IAEE,MAFFA,IAEE,CADFC,QACE,MADFA,QACE,CACF,mBACI,2BAAK,SAAS,CAAC,YAAf,eACI,gCACI,SAAS,CAAEP,UAAU,CAAC,8BAAD,CAAiC,CAClD,aAAcK,KADoC,CAAjC,CADzB,CAII,WAAW,CAAEF,WAJjB,CAKI,IAAI,CAAED,IALV,CAMI,KAAK,CAAEE,KANX,CAOI,QAAQ,CAAEG,QAPd,EADJ,CAUKD,IAAI,eAAI,6BAAO,SAAS,CAAC,sBAAjB,EAAyCA,IAAzC,CAVb,CAWKD,KAAK,eAAI,2BAAK,SAAS,CAAC,kBAAf,EAAmCA,KAAnC,CAXd,CADJ,CAeH,CAvBD,CAyBA;AAUA,cAAeJ,CAAAA,kBAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst TextAreaFieldGroup = ({\n    name,\n    placeholder,\n    value,\n    error,\n    info,\n    onChange,\n}) => {\n    return (\n        <div className=\"form-group\">\n            <textarea \n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder} \n                name={name} \n                value={value}\n                onChange={onChange}\n            />\n            {info && <small className=\"form-text text-muted\">{info}</small>}\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\n// PropTypes defines datatype and which props are required\nTextAreaFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default TextAreaFieldGroup;\n"]},"metadata":{},"sourceType":"module"}