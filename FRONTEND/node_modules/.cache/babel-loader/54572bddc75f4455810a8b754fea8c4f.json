{"ast":null,"code":"import React from'react';// PropTypes defines datatype and which props are required\nimport classnames from'classnames';// Which is used to pass conditional classess\nvar SelectListGroup=function SelectListGroup(_ref){var name=_ref.name,value=_ref.value,error=_ref.error,info=_ref.info,onChange=_ref.onChange,options=_ref.options;var selectOptions=options.map(function(option){return/*#__PURE__*/React.createElement(\"option\",{key:option.label,value:option.value},option.label);});return/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"select\",{className:classnames('form-control form-control-lg',{'is-invalid':error}),name:name,value:value,onChange:onChange},selectOptions),info&&/*#__PURE__*/React.createElement(\"small\",{className:\"form-text text-muted\"},info),error&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback\"},error));};// PropTypes defines datatype and which props are required\nexport default SelectListGroup;","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/common/SelectListGroup.js"],"names":["React","classnames","SelectListGroup","name","value","error","info","onChange","options","selectOptions","map","option","label"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACoC;AACpC,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAAqC;AAErC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAOlB,IANFC,CAAAA,IAME,MANFA,IAME,CALFC,KAKE,MALFA,KAKE,CAJFC,KAIE,MAJFA,KAIE,CAHFC,IAGE,MAHFA,IAGE,CAFFC,QAEE,MAFFA,QAEE,CADFC,OACE,MADFA,OACE,CACF,GAAMC,CAAAA,aAAa,CAAGD,OAAO,CAACE,GAAR,CAAY,SAAAC,MAAM,qBACpC,8BAAQ,GAAG,CAAEA,MAAM,CAACC,KAApB,CAA2B,KAAK,CAAED,MAAM,CAACP,KAAzC,EACKO,MAAM,CAACC,KADZ,CADoC,EAAlB,CAAtB,CAKA,mBACI,2BAAK,SAAS,CAAC,YAAf,eACI,8BACI,SAAS,CAAEX,UAAU,CAAC,8BAAD,CAAiC,CAClD,aAAcI,KADoC,CAAjC,CADzB,CAII,IAAI,CAAEF,IAJV,CAKI,KAAK,CAAEC,KALX,CAMI,QAAQ,CAAEG,QANd,EAQKE,aARL,CADJ,CAWKH,IAAI,eAAI,6BAAO,SAAS,CAAC,sBAAjB,EAAyCA,IAAzC,CAXb,CAYKD,KAAK,eAAI,2BAAK,SAAS,CAAC,kBAAf,EAAmCA,KAAnC,CAZd,CADJ,CAgBH,CA7BD,CA+BA;AAUA,cAAeH,CAAAA,eAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst SelectListGroup = ({\n    name,\n    value,\n    error,\n    info,\n    onChange,\n    options\n}) => {\n    const selectOptions = options.map(option => (\n        <option key={option.label} value={option.value}>\n            {option.label}\n        </option>\n    ));\n    return (\n        <div className=\"form-group\">\n            <select \n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                name={name} \n                value={value}\n                onChange={onChange}\n            >\n                {selectOptions}\n            </select>\n            {info && <small className=\"form-text text-muted\">{info}</small>}\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\n// PropTypes defines datatype and which props are required\nSelectListGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n}\n\nexport default SelectListGroup;\n"]},"metadata":{},"sourceType":"module"}