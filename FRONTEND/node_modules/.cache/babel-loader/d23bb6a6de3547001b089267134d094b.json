{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/posts/PostForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport { addPost } from \"../../actions/postActions\";\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      errors: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      user\n    } = this.props.auth;\n    const newPost = {\n      text: this.state.text,\n      name: user.name,\n      avatar: user.avatar\n    };\n    this.props.addPost(newPost);\n    this.setState({\n      text: ''\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-form mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header bg-info text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Say Somthing...\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Create a post\",\n      name: \"text\",\n      value: this.state.text,\n      onChange: this.onChange,\n      error: errors.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addPost\n})(PostForm);","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/posts/PostForm.js"],"names":["React","Component","connect","PropTypes","TextAreaFieldGroup","addPost","PostForm","constructor","props","state","text","errors","onSubmit","bind","onChange","componentWillReceiveProps","nextProps","setState","e","preventDefault","user","auth","newPost","name","avatar","target","value","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport { addPost } from \"../../actions/postActions\";\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      errors: {},\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n      if(nextProps.errors) {\n          this.setState({ errors: nextProps.errors });\n      }\n  }\n\n  onSubmit(e){\n      e.preventDefault();\n      const { user } = this.props.auth;\n      const newPost = {\n          text: this.state.text,\n          name: user.name,\n          avatar: user.avatar\n      }\n\n      this.props.addPost(newPost);\n      this.setState({ text: '' });\n  }\n\n  onChange(e) {\n      this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"post-form mb-3\">\n        <div className=\"card card-info\">\n          <div className=\"card-header bg-info text-white\">Say Somthing...</div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n                <TextAreaFieldGroup \n                    placeholder=\"Create a post\"\n                    name=\"text\"\n                    value={this.state.text}\n                    onChange={this.onChange}\n                    error={errors.text}\n                />\n              <button type=\"submit\" className=\"btn btn-dark\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {addPost})(PostForm);\n"]},"metadata":{},"sourceType":"module"}