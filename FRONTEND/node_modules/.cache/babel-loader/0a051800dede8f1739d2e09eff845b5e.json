{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/client/src/components/common/TextFieldGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\n\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: type,\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    name: name,\n    value: value,\n    onChange: onChange,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), info && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }\n  }, info), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, error));\n}; // PropTypes defines datatype and which props are required\n\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string\n}; // Set Default Values\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextFieldGroup;","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/client/src/components/common/TextFieldGroup.js"],"names":["React","PropTypes","classnames","TextFieldGroup","name","placeholder","value","label","error","info","type","onChange","disabled","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AAErC,MAAMC,cAAc,GAAG,CAAC;AACpBC,EAAAA,IADoB;AAEpBC,EAAAA,WAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,KAJoB;AAKpBC,EAAAA,KALoB;AAMpBC,EAAAA,IANoB;AAOpBC,EAAAA,IAPoB;AAQpBC,EAAAA,QARoB;AASpBC,EAAAA;AAToB,CAAD,KAUjB;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAEF,IADV;AAEI,IAAA,SAAS,EAAER,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcM;AADoC,KAAjC,CAFzB;AAKI,IAAA,WAAW,EAAEH,WALjB;AAMI,IAAA,IAAI,EAAED,IANV;AAOI,IAAA,KAAK,EAAEE,KAPX;AAQI,IAAA,QAAQ,EAAEK,QARd;AASI,IAAA,QAAQ,EAAEC,QATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYKH,IAAI,iBAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAZb,EAaKD,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAbd,CADJ;AAiBH,CA5BD,C,CA8BA;;;AACAL,cAAc,CAACU,SAAf,GAA2B;AACvBT,EAAAA,IAAI,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UADA;AAEvBV,EAAAA,WAAW,EAAEJ,SAAS,CAACa,MAFA;AAGvBR,EAAAA,KAAK,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UAHD;AAIvBN,EAAAA,IAAI,EAAER,SAAS,CAACa,MAJO;AAKvBN,EAAAA,KAAK,EAAEP,SAAS,CAACa,MALM;AAMvBH,EAAAA,QAAQ,EAAEV,SAAS,CAACe,IAAV,CAAeD,UANF;AAOvBH,EAAAA,QAAQ,EAAEX,SAAS,CAACa;AAPG,CAA3B,C,CAUA;;AACAX,cAAc,CAACc,YAAf,GAA8B;AAC1BP,EAAAA,IAAI,EAAE;AADoB,CAA9B;AAIA,eAAeP,cAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst TextFieldGroup = ({\n    name,\n    placeholder,\n    value,\n    label,\n    error,\n    info,\n    type,\n    onChange,\n    disabled\n}) => {\n    return (\n        <div className=\"form-group\">\n            <input \n                type={type} \n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder} \n                name={name} \n                value={value}\n                onChange={onChange}\n                disabled={disabled}\n            />\n            {info && <small className=\"form-text text-muted\">{info}</small>}\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\n// PropTypes defines datatype and which props are required\nTextFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.string\n}\n\n// Set Default Values\nTextFieldGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextFieldGroup;\n"]},"metadata":{},"sourceType":"module"}