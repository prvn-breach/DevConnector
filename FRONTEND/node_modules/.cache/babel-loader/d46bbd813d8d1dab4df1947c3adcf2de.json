{"ast":null,"code":"import _defineProperty from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{withRouter}from\"react-router-dom\";// Define routing\n// Define proptypes\nimport{connect}from\"react-redux\";// connect component with redux store\nimport{loginUser}from\"../../actions/authActions\";// Actions\nimport TextFieldGroup from\"../common/TextFieldGroup\";// Input Fields hook\nvar Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);// initialize state\nfunction Login(){var _this;_classCallCheck(this,Login);_this=_super.call(this);_this.state={email:'',password:'',errors:{}};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(Login,[{key:\"onChange\",// Trigger On change when type input fields\nvalue:function onChange(e){this.setState(_defineProperty({},e.target.name,e.target.value));}},{key:\"componentDidMount\",// Redirect to Dashboard when user is already logged in\nvalue:function componentDidMount(){if(this.props.auth.isAuthenticated){this.props.history.push('/dashboard');}}// Recieve props for this component\n},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.auth.isAuthenticated){this.props.history.push(\"/dashboard\");}if(nextProps.errors){this.setState({errors:nextProps.errors});}}// Form login onSubmit\n},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();var credentials={email:this.state.email,password:this.state.password};this.props.loginUser(credentials);}},{key:\"render\",value:function render(){var errors=this.state.errors;return/*#__PURE__*/React.createElement(\"div\",{className:\"login\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-8 m-auto\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"display-4 text-center\"},\"Log In\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead text-center\"},\"Sign in to your DevConnector account\"),/*#__PURE__*/React.createElement(\"form\",{noValidate:true,onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(TextFieldGroup,{type:\"email\",error:errors.email,placeholder:\"Email Address\",name:\"email\",value:this.state.email,onChange:this.onChange}),/*#__PURE__*/React.createElement(TextFieldGroup,{type:\"password\",error:errors.password,placeholder:\"Password\",name:\"password\",value:this.state.password,onChange:this.onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-info btn-block mt-4\"}))))));}}]);return Login;}(Component);// PropTypes defines datatype and which props are required\n// Define props from state\nvar mapStateToProp=function mapStateToProp(state){return{auth:state.auth,errors:state.errors};};export default connect(mapStateToProp,{loginUser:loginUser})(withRouter(Login));","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/auth/Login.js"],"names":["React","Component","withRouter","connect","loginUser","TextFieldGroup","Login","state","email","password","errors","onChange","bind","onSubmit","e","setState","target","name","value","props","auth","isAuthenticated","history","push","nextProps","preventDefault","credentials","mapStateToProp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\"; // Define routing\nimport PropTypes from \"prop-types\"; // Define proptypes\nimport { connect } from \"react-redux\"; // connect component with redux store\nimport { loginUser } from \"../../actions/authActions\"; // Actions\nimport TextFieldGroup from \"../common/TextFieldGroup\"; // Input Fields hook\n\nclass Login extends Component {\n    // initialize state\n    constructor () {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    };\n\n    // Trigger On change when type input fields\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    // Redirect to Dashboard when user is already logged in\n    componentDidMount () {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/dashboard');\n        }\n    }\n\n    // Recieve props for this component\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // Form login onSubmit\n    onSubmit(e) {\n        e.preventDefault();\n        const credentials = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.loginUser(credentials);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <p className=\"lead text-center\">Sign in to your DevConnector account</p>\n                            <form noValidate onSubmit={this.onSubmit}>\n                                <TextFieldGroup \n                                    type=\"email\"\n                                    error={errors.email}\n                                    placeholder=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                                <TextFieldGroup \n                                    type=\"password\"\n                                    error={errors.password}\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// PropTypes defines datatype and which props are required\nLogin.propTypes = {\n    loginUser : PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\n// Define props from state\nconst mapStateToProp = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProp, { loginUser }) (withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}