{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/client/src/components/common/TextAreaFieldGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\n\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst TextAreaFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  onChange\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    name: name,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), info && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }\n  }, info), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }, error));\n}; // PropTypes defines datatype and which props are required\n\n\nTextAreaFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\nexport default TextAreaFieldGroup;","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/client/src/components/common/TextAreaFieldGroup.js"],"names":["React","PropTypes","classnames","TextAreaFieldGroup","name","placeholder","value","error","info","onChange","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AAErC,MAAMC,kBAAkB,GAAG,CAAC;AACxBC,EAAAA,IADwB;AAExBC,EAAAA,WAFwB;AAGxBC,EAAAA,KAHwB;AAIxBC,EAAAA,KAJwB;AAKxBC,EAAAA,IALwB;AAMxBC,EAAAA;AANwB,CAAD,KAOrB;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAEP,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcK;AADoC,KAAjC,CADzB;AAII,IAAA,WAAW,EAAEF,WAJjB;AAKI,IAAA,IAAI,EAAED,IALV;AAMI,IAAA,KAAK,EAAEE,KANX;AAOI,IAAA,QAAQ,EAAEG,QAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUKD,IAAI,iBAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAVb,EAWKD,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAXd,CADJ;AAeH,CAvBD,C,CAyBA;;;AACAJ,kBAAkB,CAACO,SAAnB,GAA+B;AAC3BN,EAAAA,IAAI,EAAEH,SAAS,CAACU,MAAV,CAAiBC,UADI;AAE3BP,EAAAA,WAAW,EAAEJ,SAAS,CAACU,MAFI;AAG3BL,EAAAA,KAAK,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UAHG;AAI3BJ,EAAAA,IAAI,EAAEP,SAAS,CAACU,MAJW;AAK3BJ,EAAAA,KAAK,EAAEN,SAAS,CAACU,MALU;AAM3BF,EAAAA,QAAQ,EAAER,SAAS,CAACY,IAAV,CAAeD;AANE,CAA/B;AASA,eAAeT,kBAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // PropTypes defines datatype and which props are required\nimport classnames from 'classnames'; // Which is used to pass conditional classess\n\nconst TextAreaFieldGroup = ({\n    name,\n    placeholder,\n    value,\n    error,\n    info,\n    onChange,\n}) => {\n    return (\n        <div className=\"form-group\">\n            <textarea \n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder} \n                name={name} \n                value={value}\n                onChange={onChange}\n            />\n            {info && <small className=\"form-text text-muted\">{info}</small>}\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\n// PropTypes defines datatype and which props are required\nTextAreaFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default TextAreaFieldGroup;\n"]},"metadata":{},"sourceType":"module"}