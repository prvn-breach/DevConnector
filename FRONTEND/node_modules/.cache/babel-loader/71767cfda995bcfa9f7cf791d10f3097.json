{"ast":null,"code":"import { ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_LOADING } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state,\n        posts: [action.payload, ...state.posts]\n      };\n\n    case POST_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_POSTS:\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: action.payload,\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/client/src/reducers/postReducer.js"],"names":["ADD_POST","DELETE_POST","GET_POST","GET_POSTS","POST_LOADING","initialState","posts","post","loading","state","action","type","payload","filter","_id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,EAA0CC,SAA1C,EAAqDC,YAArD,QAAyE,kBAAzE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,KAAK,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,KAA1B;AAFJ,OAAP;;AAIJ,SAAKF,YAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKL,SAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFX;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,QAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFV;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKP,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBN,IAAI,IAAIA,IAAI,CAACO,GAAL,KAAaJ,MAAM,CAACE,OAA/C;AAFJ,OAAP;;AAIJ;AACI,aAAOH,KAAP;AA7BR;AA+BH","sourcesContent":["import { ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_LOADING } from \"../actions/types\";\n\nconst initialState = {\n    posts: [],\n    post: {},\n    loading: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [action.payload, ...state.posts]\n            }\n        case POST_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: action.payload,\n                loading: false\n            }\n        case GET_POST:\n            return {\n                ...state,\n                post: action.payload,\n                loading: false\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== action.payload)\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}