{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/add-credentials/AddExperience.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addExperience } from \"../../actions/profileActions\";\n\nclass AddExperience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      company: '',\n      title: '',\n      location: '',\n      from: '',\n      to: '',\n      current: false,\n      description: '',\n      errors: {},\n      disabled: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onCheck = this.onCheck.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const expData = {\n      company: this.state.company,\n      title: this.state.title,\n      location: this.state.location,\n      from: this.state.from,\n      to: this.state.to,\n      current: this.state.current,\n      description: this.state.description\n    };\n    this.props.addExperience(expData, this.props.history);\n  }\n\n  onCheck(e) {\n    this.setState({\n      disabled: !this.state.disabled,\n      current: !this.state.current\n    });\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-experience\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/dashboard\",\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"Go Back\"), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Add Experience\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Add any job or position that you have had in the past or current\"), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"* = required fields\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextFieldGroup, {\n      placeholder: \"* Company\",\n      name: \"company\",\n      value: this.state.company,\n      onChange: this.onChange,\n      error: errors.company,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      placeholder: \"* Job Title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.onChange,\n      error: errors.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      placeholder: \"Location\",\n      name: \"location\",\n      value: this.state.location,\n      onChange: this.onChange,\n      error: errors.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, \"From Date\"), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      name: \"from\",\n      type: \"date\",\n      value: this.state.from,\n      onChange: this.onChange,\n      error: errors.from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, \"To Date\"), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      name: \"to\",\n      type: \"date\",\n      value: this.state.to,\n      onChange: this.onChange,\n      error: errors.to,\n      disabled: this.state.disabled ? 'disabled' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"form-check-input\",\n      name: \"current\",\n      value: this.state.current,\n      checked: this.state.current,\n      onChange: this.onCheck,\n      id: \"current\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"current\",\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, \"Current Job\")), /*#__PURE__*/React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Job Description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.onChange,\n      error: errors.description,\n      info: \"Tell us about the position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addExperience\n})(withRouter(AddExperience));","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/FRONTEND/src/components/add-credentials/AddExperience.js"],"names":["React","Component","Link","withRouter","TextFieldGroup","TextAreaFieldGroup","connect","PropTypes","addExperience","AddExperience","constructor","props","state","company","title","location","from","to","current","description","errors","disabled","onChange","bind","onSubmit","onCheck","componentWillReceiveProps","nextProps","setState","e","target","name","value","preventDefault","expData","history","render","propTypes","func","isRequired","profile","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addExperience } from \"../../actions/profileActions\";\n\nclass AddExperience extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            company: '',\n            title: '',\n            location: '',\n            from: '',\n            to: '',\n            current: false,\n            description: '',\n            errors: {},\n            disabled: false\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onCheck = this.onCheck.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const expData = {\n            company: this.state.company,\n            title: this.state.title,\n            location: this.state.location,\n            from : this.state.from,\n            to: this.state.to,\n            current: this.state.current,\n            description: this.state.description\n        }\n\n        this.props.addExperience(expData, this.props.history);\n    }\n\n    onCheck(e){\n        this.setState({\n            disabled: !this.state.disabled,\n            current: !this.state.current\n        })\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"add-experience\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to=\"/dashboard\" className=\"btn btn-light\">\n                                Go Back\n                            </Link>\n                            <h1 className=\"display-4 text-center\">Add Experience</h1>\n                            <p className=\"lead text-center\">Add any job or position that you have had in the past or current</p>\n                            <small className=\"d-block pb-3\">* = required fields</small>\n                            <form onSubmit={this.onSubmit}>\n                                <TextFieldGroup \n                                    placeholder=\"* Company\"\n                                    name=\"company\"\n                                    value={this.state.company}\n                                    onChange={this.onChange}\n                                    error={errors.company}\n                                />\n                                <TextFieldGroup \n                                    placeholder=\"* Job Title\"\n                                    name=\"title\"\n                                    value={this.state.title}\n                                    onChange={this.onChange}\n                                    error={errors.title}\n                                />\n                                <TextFieldGroup \n                                    placeholder=\"Location\"\n                                    name=\"location\"\n                                    value={this.state.location}\n                                    onChange={this.onChange}\n                                    error={errors.location}\n                                />\n                                <h6>From Date</h6>\n                                <TextFieldGroup \n                                    name=\"from\"\n                                    type=\"date\"\n                                    value={this.state.from}\n                                    onChange={this.onChange}\n                                    error={errors.from}\n                                />\n                                <h6>To Date</h6>\n                                <TextFieldGroup \n                                    name=\"to\"\n                                    type=\"date\"\n                                    value={this.state.to}\n                                    onChange={this.onChange}\n                                    error={errors.to}\n                                    disabled={this.state.disabled ? 'disabled' : ''}\n                                />\n                                <div className=\"form-check mb-4\">\n                                    <input \n                                        type=\"checkbox\" \n                                        className=\"form-check-input\"\n                                        name=\"current\"\n                                        value={this.state.current}\n                                        checked={this.state.current}\n                                        onChange={this.onCheck}\n                                        id=\"current\"\n                                    />\n                                    <label htmlFor=\"current\" className=\"form-check-label\">\n                                        Current Job\n                                    </label>\n                                </div>\n                                <TextAreaFieldGroup \n                                    placeholder=\"Job Description\"\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    onChange={this.onChange}\n                                    error={errors.description}\n                                    info=\"Tell us about the position\"\n                                />\n                                <input \n                                    type=\"submit\" \n                                    value=\"submit\" \n                                    className=\"btn btn-info btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {addExperience})(withRouter(AddExperience));\n"]},"metadata":{},"sourceType":"module"}