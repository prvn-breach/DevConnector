{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, DELETE_POST, GET_ERRORS, CLEAR_ERRORS, GET_POST, GET_POSTS, POST_LOADING } from \"./types\"; // Add Post\n\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios.post('/api/posts', postData).then(res => dispatch({\n    type: ADD_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Get Posts\n\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios.get('/api/posts').then(res => dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POSTS,\n    payload: null\n  }));\n}; // Get Post\n\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios.get(`/api/posts/${id}`).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POST,\n    payload: null\n  }));\n}; // Delete Post\n\nexport const deletePost = id => dispatch => {\n  axios.delete(`/api/posts/${id}`).then(res => dispatch({\n    type: DELETE_POST,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Like\n\nexport const addLike = id => dispatch => {\n  axios.post(`/api/posts/like/${id}`).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Remove Like\n\nexport const removeLike = id => dispatch => {\n  axios.post(`/api/posts/unlike/${id}`).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Comment\n\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios.post(`/api/posts/comment/${postId}`, commentData).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Delete Comment for Single Post\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(`/api/posts/comment/${postId}/${commentId}`).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Loading \n\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear Errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/FRONTEND/src/actions/postActions.js"],"names":["axios","ADD_POST","DELETE_POST","GET_ERRORS","CLEAR_ERRORS","GET_POST","GET_POSTS","POST_LOADING","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { \n    ADD_POST, \n    DELETE_POST, \n    GET_ERRORS, \n    CLEAR_ERRORS,\n    GET_POST, \n    GET_POSTS, \n    POST_LOADING \n} from \"./types\";\n\n\n// Add Post\nexport const addPost = postData => dispatch => {\n    dispatch(clearErrors());\n    axios.post('/api/posts', postData)\n        .then(res => \n            dispatch({\n                type: ADD_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Get Posts\nexport const getPosts = () => dispatch => {\n    dispatch(setPostLoading());\n    axios.get('/api/posts')\n        .then(res => \n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_POSTS,\n                payload: null\n            })    \n        )\n}\n\n// Get Post\nexport const getPost = (id) => dispatch => {\n    dispatch(setPostLoading());\n    axios.get(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_POST,\n                payload: null\n            })    \n        )\n}\n\n// Delete Post\nexport const deletePost = (id) => dispatch => {\n    axios.delete(`/api/posts/${id}`)\n        .then(res => \n            dispatch({\n                type: DELETE_POST,\n                payload: id\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Add Like\nexport const addLike = (id) => dispatch => {\n    axios.post(`/api/posts/like/${id}`)\n        .then(res => \n            dispatch(getPosts())    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Remove Like\nexport const removeLike = (id) => dispatch => {\n    axios.post(`/api/posts/unlike/${id}`)\n        .then(res => \n            dispatch(getPosts())    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n    dispatch(clearErrors());\n    axios.post(`/api/posts/comment/${postId}`, commentData)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n// Delete Comment for Single Post\nexport const deleteComment = (postId, commentId) => dispatch => {\n    axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n        .then(res => \n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })    \n        )\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })    \n        )\n}\n\n\n// Loading \nexport const setPostLoading = () => {\n    return {\n        type: POST_LOADING\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    }\n}"]},"metadata":{},"sourceType":"module"}