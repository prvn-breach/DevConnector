{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\"; // Creating store, middleware and compose displays reponse on redux dev tools in Chrome extension\n\nimport thunk from \"redux-thunk\"; // It is Middlware\n\nimport rootReducer from './reducers'; // Return Response Payload Data\n\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { createLogger } from 'redux-logger';\nconst logger = createLogger({\n  /* https://github.com/evgenyrodionov/redux-logger */\n  collapsed: true,\n  diff: true\n}); // Initializing State\n\nconst initialState = {}; // Redux Thunk is a middleware that lets you call action creators that return a function instead of an action object\n\nconst middleware = [thunk]; // Creating Store\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware, logger)));\nexport default store;","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","composeWithDevTools","createLogger","logger","collapsed","diff","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CAA+D;;AAC/D,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AACjC,OAAOC,WAAP,MAAwB,YAAxB,C,CAAsC;;AACtC,SAAQC,mBAAR,QAAkC,0CAAlC;AACA,SAAQC,YAAR,QAA2B,cAA3B;AAGA,MAAMC,MAAM,GAAGD,YAAY,CAAC;AACxB;AACAE,EAAAA,SAAS,EAAE,IAFa;AAGxBC,EAAAA,IAAI,EAAE;AAHkB,CAAD,CAA3B,C,CAMA;;AACA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,CAACR,KAAD,CAAnB,C,CAEA;;AACA,MAAMS,KAAK,GAAGZ,WAAW,CACrBI,WADqB,EAErBM,YAFqB,EAGrBL,mBAAmB,CACfJ,eAAe,CAAC,GAAGU,UAAJ,EAAgBJ,MAAhB,CADA,CAHE,CAAzB;AAQA,eAAeK,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\"; // Creating store, middleware and compose displays reponse on redux dev tools in Chrome extension\nimport thunk from \"redux-thunk\"; // It is Middlware\nimport rootReducer from './reducers'; // Return Response Payload Data\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport {createLogger} from 'redux-logger';\n\n\nconst logger = createLogger({\n    /* https://github.com/evgenyrodionov/redux-logger */\n    collapsed: true,\n    diff: true\n});\n\n// Initializing State\nconst initialState = {};\n\n// Redux Thunk is a middleware that lets you call action creators that return a function instead of an action object\nconst middleware = [thunk];\n\n// Creating Store\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeWithDevTools (\n        applyMiddleware(...middleware, logger)\n    )\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}