{"ast":null,"code":"var _jsxFileName = \"/home/workspace/practise/mern/DevConnector/client/src/components/auth/Login.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\"; // Define routing\n\nimport PropTypes from \"prop-types\"; // Define proptypes\n\nimport { connect } from \"react-redux\"; // connect component with redux store\n\nimport { loginUser } from \"../../actions/authActions\"; // Actions\n\nimport TextFieldGroup from \"../common/TextFieldGroup\"; // Input Fields hook\n\nclass Login extends Component {\n  // initialize state\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Trigger On change when type input fields\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  // Redirect to Dashboard when user is already logged in\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  } // Recieve props for this component\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  } // Form login onSubmit\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    const credentials = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(credentials);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"Log In\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, \"Sign in to your DevConnector account\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextFieldGroup, {\n      type: \"email\",\n      error: errors.email,\n      placeholder: \"Email Address\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextFieldGroup, {\n      type: \"password\",\n      error: errors.password,\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n} // PropTypes defines datatype and which props are required\n\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}; // Define props from state\n\nconst mapStateToProp = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProp, {\n  loginUser\n})(withRouter(Login));","map":{"version":3,"sources":["/home/workspace/practise/mern/DevConnector/client/src/components/auth/Login.js"],"names":["React","Component","withRouter","PropTypes","connect","loginUser","TextFieldGroup","Login","constructor","state","email","password","errors","onChange","bind","onSubmit","e","setState","target","name","value","componentDidMount","props","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","preventDefault","credentials","render","propTypes","func","isRequired","object","mapStateToProp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\"; // Define routing\nimport PropTypes from \"prop-types\"; // Define proptypes\nimport { connect } from \"react-redux\"; // connect component with redux store\nimport { loginUser } from \"../../actions/authActions\"; // Actions\nimport TextFieldGroup from \"../common/TextFieldGroup\"; // Input Fields hook\n\nclass Login extends Component {\n    // initialize state\n    constructor () {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    };\n\n    // Trigger On change when type input fields\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    // Redirect to Dashboard when user is already logged in\n    componentDidMount () {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/dashboard');\n        }\n    }\n\n    // Recieve props for this component\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // Form login onSubmit\n    onSubmit(e) {\n        e.preventDefault();\n        const credentials = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.loginUser(credentials);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <p className=\"lead text-center\">Sign in to your DevConnector account</p>\n                            <form noValidate onSubmit={this.onSubmit}>\n                                <TextFieldGroup \n                                    type=\"email\"\n                                    error={errors.email}\n                                    placeholder=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                                <TextFieldGroup \n                                    type=\"password\"\n                                    error={errors.password}\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// PropTypes defines datatype and which props are required\nLogin.propTypes = {\n    loginUser : PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\n// Define props from state\nconst mapStateToProp = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProp, { loginUser }) (withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}