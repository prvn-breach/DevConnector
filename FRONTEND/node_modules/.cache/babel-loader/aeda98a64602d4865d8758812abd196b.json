{"ast":null,"code":"import _defineProperty from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/workspace/practise-mern/practise/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{withRouter}from\"react-router-dom\";// Define routing\n// Define proptypes\nimport{connect}from\"react-redux\";// connect component with redux store\nimport{registerUser}from\"../../actions/authActions\";// Actions\nimport TextFieldGroup from\"../common/TextFieldGroup\";// Input Fields hook\nvar Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);var _super=_createSuper(Register);// Initilaize State\nfunction Register(){var _this;_classCallCheck(this,Register);_this=_super.call(this);_this.state={name:'',email:'',password:'',password2:'',errors:{}};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}// Redirect to Dashboard when user is already logged in\n_createClass(Register,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.auth.isAuthenticated){this.props.history.push('/dashboard');}}// Recieve props for this component\n},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.errors){this.setState({errors:nextProps.errors});}}// Trigger On change when type input fields\n},{key:\"onChange\",value:function onChange(e){this.setState(_defineProperty({},e.target.name,e.target.value));}// Form submit\n},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();var newUser={name:this.state.name,email:this.state.email,password:this.state.password,password2:this.state.password2};this.props.registerUser(newUser,this.props.history);}},{key:\"render\",value:function render(){var errors=this.state.errors;return/*#__PURE__*/React.createElement(\"div\",{className:\"register\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-8 m-auto\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"display-4 text-center\"},\"Sign Up\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead text-center\"},\"Create your DevConnector account\"),/*#__PURE__*/React.createElement(\"form\",{noValidate:true,onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(TextFieldGroup,{type:\"text\",error:errors.name,placeholder:\"Name\",name:\"name\",value:this.state.name,onChange:this.onChange}),/*#__PURE__*/React.createElement(TextFieldGroup,{type:\"email\",error:errors.email,placeholder:\"Email Address\",name:\"email\",value:this.state.email,onChange:this.onChange,info:\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"}),/*#__PURE__*/React.createElement(TextFieldGroup,{type:\"password\",error:errors.password,placeholder:\"Password\",name:\"password\",value:this.state.password,onChange:this.onChange}),/*#__PURE__*/React.createElement(TextFieldGroup,{type:\"password\",error:errors.password2,placeholder:\"Confirm Password\",name:\"password2\",value:this.state.password2,onChange:this.onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-info btn-block mt-4\"}))))));}}]);return Register;}(Component);// PropTypes defines datatype and which props are required\n// Define props from state\nvar mapStateToProp=function mapStateToProp(state){return{auth:state.auth,errors:state.errors};};export default connect(mapStateToProp,{registerUser:registerUser})(withRouter(Register));","map":{"version":3,"sources":["/home/workspace/practise-mern/practise/DevConnector/client/src/components/auth/Register.js"],"names":["React","Component","withRouter","connect","registerUser","TextFieldGroup","Register","state","name","email","password","password2","errors","onChange","bind","onSubmit","props","auth","isAuthenticated","history","push","nextProps","setState","e","target","value","preventDefault","newUser","mapStateToProp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\"; // Define routing\nimport PropTypes from \"prop-types\"; // Define proptypes\nimport { connect } from \"react-redux\"; // connect component with redux store\nimport { registerUser } from \"../../actions/authActions\"; // Actions\nimport TextFieldGroup from \"../common/TextFieldGroup\"; // Input Fields hook\n\nclass Register extends Component {\n\n    // Initilaize State\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            password2: '',\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    // Redirect to Dashboard when user is already logged in\n    componentDidMount () {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/dashboard');\n        }\n    }\n\n    // Recieve props for this component\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // Trigger On change when type input fields\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n    \n    // Form submit\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        \n        this.props.registerUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">\n                                Create your DevConnector account\n                            </p>\n                            <form noValidate onSubmit={this.onSubmit}>\n                                <TextFieldGroup \n                                    type=\"text\"\n                                    error={errors.name}\n                                    placeholder=\"Name\"\n                                    name=\"name\"\n                                    value={this.state.name}\n                                    onChange={this.onChange}\n                                />\n                                <TextFieldGroup \n                                    type=\"email\"\n                                    error={errors.email}\n                                    placeholder=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                    info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                                />\n                                <TextFieldGroup \n                                    type=\"password\"\n                                    error={errors.password}\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                                <TextFieldGroup \n                                    type=\"password\"\n                                    error={errors.password2}\n                                    placeholder=\"Confirm Password\"\n                                    name=\"password2\"\n                                    value={this.state.password2}\n                                    onChange={this.onChange}\n                                />\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// PropTypes defines datatype and which props are required\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\n// Define props from state\nconst mapStateToProp = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect( mapStateToProp, {registerUser}) (withRouter(Register) );\n"]},"metadata":{},"sourceType":"module"}